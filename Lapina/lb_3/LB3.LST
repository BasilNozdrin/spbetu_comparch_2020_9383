Microsoft (R) Macro Assembler Version 5.10                  10/28/20 12:18:1
                                                             Page     1-1


 0000				AStack SEGMENT STACK
 0000  0020[				DW 32 DUP(?)
	   ????			
			 ]	
				
 0040				AStack ENDS
				
 0000				DATA SEGMENT
 0000  0001			a	DW	1
 0002  0002			b	DW	2
 0004  0002			i	DW	2
 0006  FFFD			k	DW	-3
 0008  0000			i1	DW	?
 000A  0000			i2	DW	?
 000C  0000			res	DW	?
 000E				DATA ENDS
				
 0000				CODE SEGMENT
					ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				Main PROC FAR
 0000  B8 ---- R			mov ax, DATA
 0003  8E D8				mov ds, ax
				
 0005				f1_1:
 0005  A1 0000 R			mov ax, a
 0008  3B 06 0002 R			cmp ax, b
 000C  7F 14				jg f1_2		;if a>b
							;a<=b
 000E  A1 0004 R			mov ax, i        
 0011  D1 E0				shl ax, 1	;ax = 2*i
 0013  8B D8				mov bx, ax	;bx = 2*i
 0015  D1 E0				shl ax, 1	;ax = 4*i
 0017  03 C3				add ax, bx	;ax = 6*i
 0019  2D 000A				sub ax, 10	;ax = 6*i - 10
 001C  A3 0008 R			mov i1, ax
					
 001F  EB 10 90				jmp f2_1
 0022				f1_2:
 0022  A1 0004 R			mov ax, i
 0025  D1 E0				shl ax, 1       ;ax = 2*i
 0027  D1 E0				shl ax, 1       ;ax = 4*i
 0029  05 0003				add ax, 3       ;ax = 4*i+3
 002C  F7 D8				neg ax	        ;ax = -ax
 002E  A3 0008 R			mov i1, ax
				
 0031				f2_1:
 0031  A1 0000 R			mov ax, a
 0034  3B 06 0002 R			cmp ax, b
 0038  7F 16				jg f2_2		;if a>b
							;a<=b
 003A  A1 0004 R			mov ax, i        
 003D  D1 E0				shl ax, 1	;ax = 2*i
 003F  8B D8				mov bx, ax	;bx = 2*i
Microsoft (R) Macro Assembler Version 5.10                  10/28/20 12:18:1
                                                             Page     1-2


 0041  D1 E0				shl ax, 1	;ax = 4*i
 0043  03 C3				add ax, bx	;ax = 6*i
 0045  F7 D8				neg ax		;ax = -ax
 0047  05 0008			        add ax, 8       ;ax = -6*i+8
					
 004A  A3 000A R			mov i2, ax
 004D  EB 12 90				jmp f3
				
 0050				f2_2:
 0050  A1 0004 R			mov ax, i
 0053  D1 E0				shl ax, 1	;ax = 2*i
 0055  8B D8				mov bx, ax	;bx = 2*i
 0057  D1 E0				shl ax, 1	;ax = 4*i
 0059  F7 D8				neg ax		;ax = -ax
 005B  05 0007				add ax, 7	;ax = -4*i + 7
				
 005E  A3 000A R			mov i2, ax
					
 0061				f3:
 0061  A1 0006 R			mov ax, k
 0064  83 3E 0006 R 00			cmp k, 0
 0069  7C 0B				jl f3_1		;if k < 0
					
 006B  A1 000A R			mov ax, i2
 006E  3D 0000				cmp ax, 0	;if ax < 0
 0071  7C 1D				jl f_abs	;then |ax|
					
 0073  EB 23 90				jmp f3_cmp_4
				
 0076				f3_1:
 0076  A1 0008 R			mov ax, i1	;ax = i1
				        
					;sub ax, i2	;ax = i1 - i2
 0079  3D 0000				cmp ax, 0	;if ax < 0
 007C  7C 28			        jl f_abs_1	;then ax = |ax|
				       
 007E  A3 000C R		        mov res, ax
 0081  A1 000A R		        mov ax, i2
 0084  3D 0000			       	cmp ax, 0	;if ax < 0
 0087  7C 30			        jl f_abs_2	;then ax = |ax|
				
 0089  29 06 000C R		        sub res, ax     ;res = |i1|-|i2|
 008D  EB 11 90				jmp f3_res
 0090				f_abs:
 0090  F7 D8				neg ax		;ax = -ax
 0092  2D 0003			        sub ax, 3       ;ax = |i2|-3
 0095  EB 01 90				jmp f3_cmp_4
				
 0098				f3_cmp_4:
 0098  3D 0004				cmp ax, 4	;if ax < 4
 009B  7C 24				jl f3_4		;res = 4
				
 009D  EB 01 90				jmp f3_res
				
Microsoft (R) Macro Assembler Version 5.10                  10/28/20 12:18:1
                                                             Page     1-3


 00A0				f3_res:
 00A0  A3 000C R			mov res, ax	;else res = ax
				
 00A3  EB 25 90				jmp f_end
					
 00A6				f_abs_1:
 00A6  F7 D8				neg ax		;ax = |ax|
 00A8  A3 000C R		        mov res, ax
 00AB  A1 000A R		        mov ax, i2
 00AE  3D 0000			       	cmp ax, 0	;if ax < 0
 00B1  7C 06			        jl f_abs_2	;then ax = |ax|
				
 00B3  29 06 000C R		        sub res, ax     ;res = |i1|-|i2|
 00B7  EB E7				jmp f3_res
				
 00B9				f_abs_2:
 00B9  F7 D8			        neg ax          ;ax = |ax|
 00BB  29 06 000C R		        sub res, ax     ;res = |i1|-|i2|
 00BF  EB DF				jmp f3_res
				
 00C1				f3_4:
 00C1  C7 06 000C R 0004		mov res, 4	;res = 4
 00C7  EB 01 90				jmp f_end	
				
 00CA				f_end:
 00CA  B4 4C				mov ah, 4ch
 00CC  CD 21				int 21h
					
 00CE				Main	ENDP
 00CE				CODE	ENDS
					END Main
Microsoft (R) Macro Assembler Version 5.10                  10/28/20 12:18:1
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0040	PARA	STACK	
CODE . . . . . . . . . . . . . .  	00CE	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000E	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	DATA

B  . . . . . . . . . . . . . . .  	L WORD	0002	DATA

F1_1 . . . . . . . . . . . . . .  	L NEAR	0005	CODE
F1_2 . . . . . . . . . . . . . .  	L NEAR	0022	CODE
F2_1 . . . . . . . . . . . . . .  	L NEAR	0031	CODE
F2_2 . . . . . . . . . . . . . .  	L NEAR	0050	CODE
F3 . . . . . . . . . . . . . . .  	L NEAR	0061	CODE
F3_1 . . . . . . . . . . . . . .  	L NEAR	0076	CODE
F3_4 . . . . . . . . . . . . . .  	L NEAR	00C1	CODE
F3_CMP_4 . . . . . . . . . . . .  	L NEAR	0098	CODE
F3_RES . . . . . . . . . . . . .  	L NEAR	00A0	CODE
F_ABS  . . . . . . . . . . . . .  	L NEAR	0090	CODE
F_ABS_1  . . . . . . . . . . . .  	L NEAR	00A6	CODE
F_ABS_2  . . . . . . . . . . . .  	L NEAR	00B9	CODE
F_END  . . . . . . . . . . . . .  	L NEAR	00CA	CODE

I  . . . . . . . . . . . . . . .  	L WORD	0004	DATA
I1 . . . . . . . . . . . . . . .  	L WORD	0008	DATA
I2 . . . . . . . . . . . . . . .  	L WORD	000A	DATA

K  . . . . . . . . . . . . . . .  	L WORD	0006	DATA

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 00CE

RES  . . . . . . . . . . . . . .  	L WORD	000C	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lb3		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  10/28/20 12:18:1
                                                             Symbols-2



    136 Source  Lines
    136 Total   Lines
     29 Symbols

  48012 + 457198 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
