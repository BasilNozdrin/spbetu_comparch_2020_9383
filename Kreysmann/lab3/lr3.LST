Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Page     1-1


				.186
				DOSSEG
				  .model small
				  .STACK 100h
				  .DATA
 0000  0000			a dw 0
 0002  0000			b dw 0
 0004  0000			i dw 0
 0006  0000			k dw 0
 0008  0000			resf1 dw 0
 000A  0000			resf2 dw 0
 000C  0000			resf3 dw 0
 000E  000F[			str db 15 dup(?)
	   ??			
			 ]	
				
 001D  0000			temp dw 0
 001F  0000			temp2 dw 0
				  .CODE
 0000				begin:
 0000  B8 ---- R		      mov ax,@DATA
 0003  8E D8			      mov ds,ax
 0005  BF 0000 R		      mov di,offset a
 0008  B9 0004			      mov cx,4                        ;—Å—á–µ—Ç
				—á–∏–∫ , 4, —Ç.–∫. –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 4 –∑
				–Ω–∞—á–µ–Ω–∏—è
 000B				inputNumbers:                         ;–≤–≤–æ–¥
				 –∑–Ω–∞—á–µ–Ω–∏–π
 000B  BA 0000			      mov dx,0                        ;–¥–ª—è –
				∑–Ω–∞–∫–∞
 000E  E8 00B8 R		      call input                      ;–≤—ã–∑–æ
				–≤ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã
				–≤–∞–µ—Ç —á–∏—Å–ª–æ
 0011  83 FA 00			      cmp dx,0                        ;—Å—Ä–∞–≤
				–Ω–∏–≤–∞–µ–º dx —Å 0
 0014  74 03			      je ContinueInputNumbers         ;–µ—Å–ª–∏
				 —Ä–∞–≤–µ–Ω 0 —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –º–µ
				—Ç–∫—É
 0016  26: F7 1D		      neg Word Ptr es:[di]            ;–¥–µ–ª–∞
				–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–
				Ω—É—é
 0019				ContinueInputNumbers:
 0019  47			      inc di
 001A  47			      inc di
 001B  E2 EE			      loop inputNumbers
				;–í—ã—á–∏—Å–ª—è–µ–º –ø–µ—Ä–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
				: 15 - 2*i if a>b  else 3*i+4
 001D  A1 0000 R		      mov ax,a
 0020  3B 06 0002 R		      cmp ax,b
 0024  A1 0004 R		      mov ax,i                  ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ ax i
 0027  7E 0F			      JNG MarkF1                ;a<=b
 0029  D1 E0			      shl ax,1                  ;—É–º–Ω–æ–∂–∞–µ
				–º ax –Ω–∞ 2 —Å–¥–≤–∏–≥–æ–º
Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Page     1-2


 002B  C7 06 0008 R 000F	      mov resf1,15              ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç 15
 0031  29 06 0008 R		      sub resf1,ax              ;resf1 = 15-2*i
 0035  EB 11 90			      jmp F2                    ;–ø–µ—Ä–µ—Ö–æ–¥
				–∏–º –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏—é –≤—Ç–æ—Ä–æ–π —Ñ—É–
				Ω–∫—Ü–∏–∏
 0038				  MarkF1:                       ;a<=b
 0038  C7 06 0008 R 0004	      mov resf1,4               ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç 4
 003E  D1 E0			      shl ax,1                  ;—É–º–Ω–æ–∂–∞–µ
				–º ax –Ω–∞ 2 —Å–¥–≤–∏–≥–æ–º
 0040  03 06 0004 R		      add ax,i                  ;–ø—Ä–∏–±–∞–≤–ª
				—è–µ–º –∫ ax i
 0044  01 06 0008 R		      add resf1,ax              ;resf1  = 4+3*i
 0048				F2:                             ;–í—ã—á–∏—Å–ª—è
				–µ–º –≤—Ç–æ—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é:-(6*i+8) if a>
				b else 9-3*(i-1)
 0048  A1 0000 R		      mov ax,a                  ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ ax a
 004B  3B 06 0002 R		      cmp ax,b                  ;—Å—Ä–∞–≤–Ω–∏–≤
				–∞–µ–º –∞ –∏ b
 004F  A1 0004 R		      mov ax,i                  ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ ax –∑–Ω–∞—á–µ–Ω–∏–µ i
 0052  8B D0			      mov dx,ax                 ;–∫–æ–ø–∏—Ä—É–µ
				–º ax –≤ dx
 0054  7E 14			      JNG MarkF2                ;a<=b
 0056  C7 06 000A R FFF8	      mov resf2,-8              ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç -8
 005C  D1 E2			      shl dx,1                  ;–≤ dx: i*2
 005E  C1 E0 02			      shl ax,2                  ;–≤ ax: i*4
 0061  03 C2			      add ax,dx                 ;ax = i*4+i*2 =
				i*6
 0063  29 06 000A R		      sub resf2,ax              ;resf2 = -8 - i
				*6 = -(6*i+8)
 0067  EB 11 90			      jmp F3                    ;–ø–µ—Ä–µ—Ö–æ–¥
				–∏–º –∫ –≤—ã—á–∏—Å–ª–µ–Ω–∏—é —Ç—Ä–µ—Ç—å–µ–π —Ñ—
				É–Ω–∫—Ü–∏–∏
 006A				MarkF2:                         ;a<=b
 006A  C7 06 000A R 000C	      mov resf2,12              ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ ax 12
 0070  D1 E0			      shl ax,1                  ;—É–º–Ω–æ–∂–∞–µ
				–º ax –Ω–∞ 2 —Å–¥–≤–∏–≥–æ–º
 0072  03 06 0004 R		      add ax,i                  ;ax = 3*i
 0076  29 06 000A R		      sub resf2,ax              ; resf2=12 - 3*
				i = 9 - 3*(i-1)
 007A				F3:                             ;–í—ã—á–∏—Å–ª—è
				–µ–º —Ç—Ä–µ—Ç—å—é —Ñ—É–Ω–∫—Ü–∏—é |resf1| + |res
				f2| if k<0 else max(6,|resf1|)
 007A  A1 0008 R		      mov ax,RESF1              ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ ax resf1
 007D  8B 1E 000A R		      mov bx,RESF2              ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ bx resf2
 0081  3D 0000			      cmp ax,0                  ;—Å—Ä–∞–≤–Ω–∏–≤
				–∞–µ–º ax —Å 0
Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Page     1-3


 0084  7D 02			      jnl MarkF3_1              ;–µ—Å–ª–∏ ax>= 
				0 —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –º–µ—Ç–∫—É
 0086  F7 D8			      neg ax                    ;–∏–Ω–∞—á–µ –¥–
				µ–ª–∞–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º
 0088				MarkF3_1:
 0088  83 FB 00			      cmp bx,0                  ;—Å—Ä–∞–≤–Ω–∏–≤
				–∞–µ–º bx —Å0
 008B  7D 02			      jnl MarkF3_2              ;–µ—Å–ª–∏ bx>=0
				 —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –º–µ—Ç–∫—É
 008D  F7 DB			      neg bx                    ;–∏–Ω–∞—á–µ –¥–
				µ–ª–∞–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º
 008F				MarkF3_2:
 008F  8B 0E 0006 R		      mov cx,k                  ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ cx –∑–Ω–∞—á–µ–Ω–∏–µ k
 0093  83 F9 00			      cmp cx,0                  ;—Å—Ä–∞–≤–Ω–∏–≤
				–∞–µ–º —Å 0
 0096  7C 14			      jl MarkF3_3               ;–µ—Å–ª–∏ k<0 –
				ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –º–µ—Ç–∫—É
 0098  3D 0006			      cmp ax,6                  ;—Å—Ä–∞–≤–Ω–∏–≤
				–∞–µ–º ax —Å 6
 009B  7C 06			      jl Set_6                  ; –µ—Å–ª–∏ 6 –±
				–æ–ª—å—à–µ —Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ
				–Ω–∏–µ 6
 009D  A3 000C R		      mov resf3,ax              ; –∏–Ω–∞—á–µ —É
				—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ |resf1|
 00A0  EB 0F 90			      jmp Endprog               ; –ø–µ—Ä–µ—Ö–æ–
				¥–∏–º –≤ –∫–æ–Ω–µ—Ü –ø—Ä–æ–≥—Ä–∞–º–º—ã
 00A3				Set_6:
 00A3  C7 06 000C R 0006	      mov resf3,6               ; —É—Å—Ç–∞–Ω–∞–
				≤–ª–∏–≤–∞–µ–º 6
 00A9  EB 06 90			      jmp Endprog               ; –ø–µ—Ä–µ—Ö–æ–
				¥–∏–º –≤ –∫–æ–Ω–µ—Ü –ø—Ä–æ–≥—Ä–∞–º–º—ã
 00AC				MarkF3_3:                       ;–µ—Å–ª–∏ k<0
 00AC  03 C3			      add ax,bx                 ;—Å–∫–ª–∞–¥—ã–≤
				–∞–µ–º ax –∏ bx
 00AE  A3 000C R		      mov resf3,ax              ;–∑–∞–Ω–æ—Å–∏–º
				 –≤ resf3
 00B1				Endprog:
 00B1  E8 00EE R		      call output
 00B4  B4 4C			      mov ah,4ch
 00B6  CD 21			      int 21h
 00B8				INPUT PROC NEAR                 ;–ø—Ä–æ—Ü–µ–¥—É
				—Ä–∞ –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞
 00B8  BB 000A			      mov bx,10                 ;–¥–ª—è —É–≤–µ–
				ª–∏—á–µ–Ω–∏—è —Ä–∞–∑—Ä—è–¥–∞
 00BB  51			      push cx                   ;—Å–æ—Ö—Ä–∞–Ω—è
				–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ cx
 00BC				Mark1:
 00BC  B4 01			      mov ah,1h
 00BE  CD 21			      int 21h
 00C0  3C 2D			      cmp al,2dh                ; —Å—Ä–∞–≤–Ω–∏–
				≤–∞–µ–º —Å –∫–æ–¥–æ–º –º–∏–Ω—É—Å–∞
 00C2  75 05			      jne Continue              ; –µ—Å–ª–∏ –Ω–µ
				 –º–∏–Ω—É—Å –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –º–µ—Ç–∫—É
Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Page     1-4


 00C4  BA 0001			      mov dx,1                  ; –µ—Å–ª–∏ dx=1
				 —Ç–æ —á–∏—Å–ª–æ –∑–∞—Ç–µ–º –±—É–¥–µ—Ç –ø—Ä–µ–æ
				–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–
				µ
 00C7  EB F3			      jmp Mark1
 00C9				Continue:
 00C9  2C 30			      sub al,30h                ; –≤—ã—á–∏—Ç–∞–
				µ–º —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ü–∏—Ñ—Ä—É –∞ –
				Ω–µ –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞
 00CB  B4 00			      mov ah,0                  ; —Ä–∞—Å—à–∏—Ä—
				è–µ–º –¥–æ —Å–ª–æ–≤–∞
 00CD  8B C8			      mov cx,ax                 ; –ø–µ—Ä–≤–∞—è 
				—Ü–∏—Ñ—Ä–∞ –≤ cx
 00CF				Mark2:
 00CF  B4 01			      mov ah,1h
 00D1  CD 21			      int 21h
 00D3  3C 0D			      cmp al,0dh                ;—Å—Ä–∞–≤–Ω–∏–≤
				–µ–º —Å –∫–æ–¥–æ–º enter
 00D5  74 0D			      je EndInput               ;–µ—Å–ª–∏ enter
				 —Ç–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –≤–≤–æ–¥–∞ —á–∏—Å–
				ª–∞
 00D7  2C 30			      sub al,30h                ;–ø–æ–ª—É—á–∞–µ
				–º —Ü–∏—Ñ—Ä—É
 00D9  B4 00			      mov ah,0h                 ;—Ä–∞—Å—à–∏—Ä—è
				–µ–º –¥–æ —Å–ª–æ–≤–∞
 00DB  91			      xchg ax,cx                ;–≤ cx —Å–ª–µ–¥
				—É—é—â–µ–µ —á–∏—Å–ª–æ, –≤ ax –ø—Ä–µ–¥—ã–¥—É—â–µ
				–µ
 00DC  52			      push dx                   ;—Å–æ—Ö—Ä–∞–Ω—è
				–µ–º dx –≤ —Å—Ç–µ–∫
 00DD  F7 E3			      mul bx                    ;—É–º–Ω–æ–∂–∞–µ
				–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —á–∏—Å–ª–æ –Ω–∞ 10
 00DF  5A			      pop dx                    ;–≤—ã—Ç–∞—Å–∫–∏
				–≤–∞–µ–º dx
 00E0  03 C8			      add cx,ax                 ;cx = ax*10 + c
				x
 00E2  EB EB			      jmp Mark2
 00E4				EndInput:                       ;–∫–æ–Ω–µ—Ü –≤–
				≤–æ–¥–∞
 00E4  B8 ---- R		      mov ax,seg a              ;–∫–ª–∞–¥–µ–º –
				≤ ax –Ω–∞—á–∞–ª–æ —Å–µ–≥–º–µ–Ω—Ç–∞ —Å –ø–µ—Ä–µ–
				º–µ–Ω–Ω—ã–º–∏
 00E7  8E C0			      mov es, ax                ;–ø–µ—Ä–µ–Ω–æ—Å
				–∏–º –µ–≥–æ –≤ es
 00E9  26: 89 0D		      mov WORD PTR es:[di],cx   ;–ø–µ—Ä–µ–Ω–æ—Å
				–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ cx –≤ –ø–µ—Ä–µ–º–µ–Ω
				–Ω—É—é
 00EC  59			      pop cx
 00ED  C3			      ret
 00EE				input endp
				
 00EE				output Proc near
 00EE  BF 0008 R		    mov di,offset resf1
 00F1  B8 ---- R		    mov ax,seg resf1
Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Page     1-5


 00F4  8E C0			    mov es,ax
 00F6  C7 06 001D R 0000	    mov temp,0
 00FC  B9 0003			    mov cx,3 ;—Å—á–µ—Ç—á–∏–∫ (3 –ø–µ—Ä–µ–º–µ–Ω–
				Ω—ã–µ)
 00FF				MarkO1:
 00FF  C7 06 001F R 0000	    mov temp2,0
 0105  26: 8B 05		    mov ax, es:[di]
 0108  3D 0000			    cmp ax, 0
 010B  7D 11			    jnl MarkO2
 010D  BB 000E R		    mov bx,offset str
 0110  03 1E 001D R		    add bx, temp
 0114  26: C6 07 2D		    mov Byte ptr es:[bx],2dh
 0118  FF 06 001D R		    inc temp
 011C  F7 D8			    neg ax
 011E				MarkO2:
 011E  3D 0000			    cmp ax,0
 0121  74 5A			    je MarkO3
 0123  BB 000A			    mov bx,10
 0126  BA 0000			    mov dx, 0
 0129  F7 F3			    div bx
 012B  83 C2 30			    add dx,30h
 012E  BB 000E R		    mov bx,offset str
 0131  03 1E 001D R		    add bx,temp
 0135  50			    push ax
 0136  83 3E 001F R 02		    cmp temp2,2
 013B  74 0E			    jz markT1
 013D  83 3E 001F R 01		    cmp temp2,1
 0142  74 1D			    jz markT2
 0144  83 3E 001F R 00		    cmp temp2,0
 0149  74 24			    jz markT3
				
 014B				    markT1:
 014B  26: 8A 47 FF		      mov al,es:[bx-1]
 014F  26: 88 07		      mov Byte ptr es:[bx],al
 0152  26: 8A 47 FE		      mov al,es:[bx-2]
 0156  26: 88 47 FF		      mov Byte ptr es:[bx-1],al
 015A  26: 88 57 FE		      mov Byte ptr es:[bx-2],dl
 015E  EB 12 90			      jmp Markt4
 0161				    markT2:
 0161  26: 8A 47 FF		      mov al,es:[bx-1]
 0165  26: 88 07		      mov Byte ptr es:[bx],al
 0168  26: 88 57 FF		      mov Byte ptr es:[bx-1],dl
 016C  EB 04 90			      jmp markt4
 016F				    MarkT3:
 016F  26: 88 17		      mov Byte ptr es:[bx],dl
 0172				MarkT4:
 0172  58			    pop ax
 0173  FF 06 001F R		    inc temp2
 0177  FF 06 001D R		    inc temp
 017B  EB A1			    jmp MarkO2
 017D				MarkO3:
 017D  BB 000E R		    mov bx,offset str
 0180  03 1E 001D R		    add bx,temp
 0184  26: C6 07 20		    mov Byte ptr es:[bx],20h;–ø—Ä–æ–±–µ–ª
Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Page     1-6


 0188  FF 06 001D R		    inc temp
 018C  83 C7 02			    add di,2
 018F  E2 03			    loop MarkO_Temp1
 0191  EB 04 90			    jmp Next
 0194				MarkO_Temp1:
 0194  E9 00FF R		    jmp MarkO1
 0197				Next:
 0197  BB 000E R		    mov bx ,offset str
 019A  03 1E 001D R		    add bx,temp
 019E  26: C6 07 24		    mov Byte ptr es:[bx],24h;–∫–æ–¥ –¥–æ–ª–ª–∞—
				Ä–∞
 01A2  BA 000E R		    mov dx,offset str
 01A5  B4 09			    mov ah,9h
 01A7  CD 21			    int 21h
 01A9  C3			    ret
 01AA				output endp
				    end
Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0021	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0100	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	01AA	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	_DATA

B  . . . . . . . . . . . . . . .  	L WORD	0002	_DATA
BEGIN  . . . . . . . . . . . . .  	L NEAR	0000	_TEXT

CONTINUE . . . . . . . . . . . .  	L NEAR	00C9	_TEXT
CONTINUEINPUTNUMBERS . . . . . .  	L NEAR	0019	_TEXT

ENDINPUT . . . . . . . . . . . .  	L NEAR	00E4	_TEXT
ENDPROG  . . . . . . . . . . . .  	L NEAR	00B1	_TEXT

F2 . . . . . . . . . . . . . . .  	L NEAR	0048	_TEXT
F3 . . . . . . . . . . . . . . .  	L NEAR	007A	_TEXT

I  . . . . . . . . . . . . . . .  	L WORD	0004	_DATA
INPUT  . . . . . . . . . . . . .  	N PROC	00B8	_TEXT	Length = 0036
INPUTNUMBERS . . . . . . . . . .  	L NEAR	000B	_TEXT

K  . . . . . . . . . . . . . . .  	L WORD	0006	_DATA

MARK1  . . . . . . . . . . . . .  	L NEAR	00BC	_TEXT
MARK2  . . . . . . . . . . . . .  	L NEAR	00CF	_TEXT
MARKF1 . . . . . . . . . . . . .  	L NEAR	0038	_TEXT
MARKF2 . . . . . . . . . . . . .  	L NEAR	006A	_TEXT
MARKF3_1 . . . . . . . . . . . .  	L NEAR	0088	_TEXT
MARKF3_2 . . . . . . . . . . . .  	L NEAR	008F	_TEXT
MARKF3_3 . . . . . . . . . . . .  	L NEAR	00AC	_TEXT
MARKO1 . . . . . . . . . . . . .  	L NEAR	00FF	_TEXT
MARKO2 . . . . . . . . . . . . .  	L NEAR	011E	_TEXT
MARKO3 . . . . . . . . . . . . .  	L NEAR	017D	_TEXT
MARKO_TEMP1  . . . . . . . . . .  	L NEAR	0194	_TEXT
MARKT1 . . . . . . . . . . . . .  	L NEAR	014B	_TEXT
MARKT2 . . . . . . . . . . . . .  	L NEAR	0161	_TEXT
MARKT3 . . . . . . . . . . . . .  	L NEAR	016F	_TEXT
MARKT4 . . . . . . . . . . . . .  	L NEAR	0172	_TEXT

NEXT . . . . . . . . . . . . . .  	L NEAR	0197	_TEXT

OUTPUT . . . . . . . . . . . . .  	N PROC	00EE	_TEXT	Length = 00BC

Microsoft (R) Macro Assembler Version 5.10                  10/22/20 15:19:2
                                                             Symbols-2


RESF1  . . . . . . . . . . . . .  	L WORD	0008	_DATA
RESF2  . . . . . . . . . . . . .  	L WORD	000A	_DATA
RESF3  . . . . . . . . . . . . .  	L WORD	000C	_DATA

SET_6  . . . . . . . . . . . . .  	L NEAR	00A3	_TEXT
STR  . . . . . . . . . . . . . .  	L BYTE	000E	_DATA	Length = 000F

TEMP . . . . . . . . . . . . . .  	L WORD	001D	_DATA
TEMP2  . . . . . . . . . . . . .  	L WORD	001F	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@CPU . . . . . . . . . . . . . .  	TEXT  259		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  l3		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    197 Source  Lines
    197 Total   Lines
     54 Symbols

  47794 + 447177 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
