Microsoft (R) Macro Assembler Version 5.10                  10/26/20 19:31:4
                                                             Page     1-1


				; Стек  программы
 0000				AStack SEGMENT STACK
 0000  0002[				DW 2 DUP(?)
	   ????			
			 ]	
				
 0004				AStack ENDS
				
				;Данные программы
 0000				DATA SEGMENT
 0000  0003			a DW 3
 0002  0000			b DW 0
 0004  0002			i DW 2
 0006  0004			k DW 4
 0008  0000			i1 DW ?
 000A  0000			i2 DW ?
 000C  0000			res DW ?
 000E				DATA ENDS
				
 0000				CODE SEGMENT
					ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				Main PROC FAR
 0000  B8 ---- R			mov ax, DATA
 0003  8E D8				mov ds, ax
				
 0005  A1 0000 R			mov ax, a
 0008  3B 06 0002 R			cmp ax, b
 000C  7E 12				jle f1_down ;jump if a <= b
								;ZF = 1 || SF !
				= OF
				
 000E				f1_up:   ;a > b
 000E  A1 0004 R			mov ax, i
 0011  D1 E0				shl ax, 1
 0013  F7 D8			    neg ax
 0015  8B D8				mov bx, ax
 0017  05 000F			    add ax, 15
 001A  A3 0008 R		    mov i1, ax
				
 001D  EB 15 90				jmp f2_up
				
 0020				f1_down:  ;a <= b
 0020  A1 0004 R			mov ax, i
 0023  D1 E0				shl ax, 1
 0025  03 06 0004 R		    add ax, i
 0029  8B D8				mov bx, ax
 002B  05 0004			    add ax, 4
 002E  A3 0008 R		    mov i1, ax
				
 0031  EB 0E 90			    jmp f2_down
				
 0034				f2_up:   ;a > b
 0034  D1 E3			    shl bx, 1
Microsoft (R) Macro Assembler Version 5.10                  10/26/20 19:31:4
                                                             Page     1-2


 0036  8B C3			    mov ax, bx
 0038  05 0007				add ax, 7
 003B  A3 000A R		    mov i2, ax
				
 003E  EB 10 90			    jmp f3_if
				
 0041				f2_down:  ;a <= b
 0041  D1 E3			    shl bx, 1
 0043  F7 DB				neg bx
 0045  B8 0008				mov ax, 8
 0048  03 C3				add ax, bx
 004A  A3 000A R		    mov i2, ax
				
 004D  EB 01 90			    jmp f3_if
				
 0050				f3_if:
 0050  83 3E 0006 R 00		    cmp k, 0
 0055  7D 1C			    jge f3_down ;jump if k >= 0
								;SF = OF
				
 0057				f3_up:   ;k < 0
 0057  B8 000A			    mov ax, 10
 005A  2B 06 000A R		    sub ax, i2
 005E  39 06 0008 R		    cmp i1, ax
 0062  7F 06			    jg f3_up_i1 ;jump if i1 > 10 - i2
								;ZF = 0 && SF =
				 OF
				
 0064				f3_up_i2:
 0064  A3 000C R		    mov res, ax
 0067  EB 24 90			    jmp main_end
				
 006A				f3_up_i1:
 006A  A1 0008 R		    mov ax, i1
 006D  A3 000C R		    mov res, ax
				
 0070  EB 1B 90			    jmp main_end
				
 0073				f3_down:  ;k >= 0
 0073  A1 0008 R		    mov ax, i1
 0076  2B 06 000A R		    sub ax, i2
 007A  3D 0000			    cmp ax, 0
 007D  7C 06			    jl f3_down_abs	;jump if ax < 0
									;SF != 
				OF
				
 007F  A3 000C R		    mov res, ax
				
 0082  EB 09 90			    jmp main_end
				
 0085				f3_down_abs:
 0085  F7 D8			    neg ax
 0087  A3 000C R			mov res, ax
				
Microsoft (R) Macro Assembler Version 5.10                  10/26/20 19:31:4
                                                             Page     1-3


 008A  EB 01 90			    jmp main_end
				
 008D				main_end:
 008D  B4 4C			    mov ah, 4ch
 008F  CD 21			    int 21h
				
 0091				Main	ENDP
 0091				CODE	ENDS
					END Main
Microsoft (R) Macro Assembler Version 5.10                  10/26/20 19:31:4
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0004	PARA	STACK	
CODE . . . . . . . . . . . . . .  	0091	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000E	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	DATA

B  . . . . . . . . . . . . . . .  	L WORD	0002	DATA

F1_DOWN  . . . . . . . . . . . .  	L NEAR	0020	CODE
F1_UP  . . . . . . . . . . . . .  	L NEAR	000E	CODE
F2_DOWN  . . . . . . . . . . . .  	L NEAR	0041	CODE
F2_UP  . . . . . . . . . . . . .  	L NEAR	0034	CODE
F3_DOWN  . . . . . . . . . . . .  	L NEAR	0073	CODE
F3_DOWN_ABS  . . . . . . . . . .  	L NEAR	0085	CODE
F3_IF  . . . . . . . . . . . . .  	L NEAR	0050	CODE
F3_UP  . . . . . . . . . . . . .  	L NEAR	0057	CODE
F3_UP_I1 . . . . . . . . . . . .  	L NEAR	006A	CODE
F3_UP_I2 . . . . . . . . . . . .  	L NEAR	0064	CODE

I  . . . . . . . . . . . . . . .  	L WORD	0004	DATA
I1 . . . . . . . . . . . . . . .  	L WORD	0008	DATA
I2 . . . . . . . . . . . . . . .  	L WORD	000A	DATA

K  . . . . . . . . . . . . . . .  	L WORD	0006	DATA

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 0091
MAIN_END . . . . . . . . . . . .  	L NEAR	008D	CODE

RES  . . . . . . . . . . . . . .  	L WORD	000C	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lab3		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    111 Source  Lines
    111 Total   Lines
     27 Symbols

  48056 + 459204 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
